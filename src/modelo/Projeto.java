package modelo;
// Generated 22/10/2013 11:33:27 by Hibernate Tools 3.2.1.GA

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Projeto generated by hbm2java
 */
@Entity
@Table(name = "projeto", schema = "public")
public class Projeto implements java.io.Serializable {

    private int id;
    private Requerente requerente;
    private Bairro bairro;
    private Autor autor;
    private String codprojeto;
    private String caminho;
    private Date dtacriacao;
    private String descricao;

    public Projeto() {
    }

   

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public int getId() {
        return this.id;
    }

    public void setId(int id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "requerente_id")
    public Requerente getRequerente() {
        return this.requerente;
    }

    public void setRequerente(Requerente requerente) {
        this.requerente = requerente;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "autor_id")
    public Autor getAutor() {
        return this.autor;
    }

    public void setAutor(Autor autor) {
        this.autor = autor;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "localizacao_id")
    public Bairro getBairro() {
        return bairro;
    }

    public void setBairro(Bairro bairro) {
        this.bairro = bairro;
    }

    @Column(name = "codprojeto", length = 10)
    public String getCodprojeto() {
        return this.codprojeto;
    }

    public void setCodprojeto(String codprojeto) {
        this.codprojeto = codprojeto;
    }

    @Column(name = "caminho", nullable = false, length = 200)
    public String getCaminho() {
        return this.caminho;
    }

    public void setCaminho(String caminho) {
        this.caminho = caminho;
    }

    @Temporal(TemporalType.DATE)
    @Column(name = "dtacriacao", nullable = false, length = 13)
    public Date getDtacriacao() {
        return this.dtacriacao;
    }

    public void setDtacriacao(Date dtacriacao) {
        this.dtacriacao = dtacriacao;
    }

    @Column(name = "descricao", nullable = false)
    public String getDescricao() {
        return this.descricao;
    }

    public void setDescricao(String descricao) {
        this.descricao = descricao;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 17 * hash + this.id;
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Projeto other = (Projeto) obj;
        if (this.id != other.id) {
            return false;
        }
        return true;
    }
    
    
}
